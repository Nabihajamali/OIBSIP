# -*- coding: utf-8 -*-
"""spam detection.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VY5whSIjcIzNihY8dWXeuoyzdPx9qtnd
"""

import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.model_selection import train_test_split
from sklearn.svm import SVC
from sklearn.metrics import accuracy_score

# Step 1: Load and preprocess the dataset
data = pd.read_csv('spam.csv', encoding='latin-1')
email_text = data['v2']  # Assuming 'v2' is the column name containing the email text
labels = data['v1']  # Assuming 'v1' is the column name containing the spam or non-spam labels

# Step 2: Split the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(email_text, labels, test_size=0.2, random_state=42)

# Step 3: Preprocess the email text using TF-IDF vectorizer
tfidf = TfidfVectorizer()
X_train = tfidf.fit_transform(X_train)
X_test = tfidf.transform(X_test)

# Step 4: Build the machine learning model
model = SVC()
model.fit(X_train, y_train)

# Step 5: Evaluate the model
y_pred = model.predict(X_test)
accuracy = accuracy_score(y_test, y_pred)
print("Accuracy:", accuracy)

# Step 6: Deploy the Spam Detector (classification of new emails)
new_emails = ["Hey there! meet me soon."]
new_emails_transformed = tfidf.transform(new_emails)
new_emails_pred = model.predict(new_emails_transformed)
print("New Email Predictions:", new_emails_pred)
print(X_train)
print(y_train)